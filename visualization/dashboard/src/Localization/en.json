{
    "selectPoint": "Select a point to see its local explanation",
    "_selectPoint.comment": "Prompts the user to select a point",
    "defaultClassNames": "Class {0}",
    "_defaultClassNames.comment": " models that output classes have this as the default class names",
    "defaultFeatureNames": "Feature {0}",
    "_defaultFeatureNames.comment": "the default column names", 
    "absoluteAverage": "Average of absolute value",
    "_absoluteAverage.comment": "https://en.wikipedia.org/wiki/Norm_(mathematics) Absolute value norm",
    "predictedClass": "Predicted class",
    "_predictedClass.comment": "Norm based on the predicted class rather than absolute value as above",
    "dataExploration": "Data Exploration",
    "_dataExploration.comment": "Label for tab showing scatterplot of dataset and predictions",
    "globalImportance": "Global Importance",
    "_globalImportance.comment": "Label for tab showing bar chart of importance of features at a global level",
    "explanationExploration": "Explanation Exploration",
    "_explanationExploration.comment": "Label for tab showing scatter plot of dataset and importance of features data",
    "summaryImportance": "Summary Importance",
    "_summmaryImportance.comment": "Label showing all importance of feature datapoints in scatter plot",
    "featureImportance": "Feature Importance",
    "_featureImportance.comment": "Label for feature importance ",
    "perturbationExploration": "Perturbation Exploration",
    "_perturbationExploration.comment": "Label for local tab allowing the user to change parameters on a selected point",
    "localFeatureImportance": "Local Feature Importance",
    "_localFeatureImportance.comment": "Label for local tab showing feature importance of selected point",
    "ice": "ICE",
    "_ice.comment": "Label for tab showing https://christophm.github.io/interpretable-ml-book/ice.html",
    "clearSelection": "Clear selection",
    "feature": "Feature:",
    "intercept": "Intercept",
    "_intercept.comment": "The label for the linear intercept, the bias value",
    "ExplanationScatter": {
        "dataLabel": "Data : {0}",
        "_dataLabel.comment": "prepend in front of column names",
        "importanceLabel": "Importance : {0}",
        "_importanceLabel.comment": "prepend in front of feature importance of column name",
        "predictedY": "PredictedY",
        "_predictedY.comment": "predicted output",
        "index": "Index",
        "_index.comment": "the index value (an integer of the row number)",
        "dataGroupLabel": "Data",
        "output": "Output",
        "probabilityLabel": "Probability : {0}",
        "_probabilityLabel.comment": "Probability prefix for all classes in a multiclass problem",
        "trueY": "True Y",
        "_trueY.comment": "The true value to be predicted",
        "class": "class: ",
        "_class.comment": "label for predicted class",
        "xValue": "X value:",
        "_xValue.comment": "label for x value dropdown",
        "yValue": "Y value:",
        "_yValue.comment": "label for y value dropdown",
        "colorValue": "Color:",
        "_colorValue.comment": "label for selecting color value"
    },
    "CrossClass": {
        "label": "Cross-class weighting:",
        "_label.comment": "label for dropdown allowing user to select how importance across multiple output classes is aggregated",
        "info": "Information on cross-class calculation",
        "_info.comment": "tooltip on hover",
        "overviewInfo": "Multiclass models generate an independent feature importance vector for each class. Each class's feature importance vector demonstrates which features made a class more likely or less likely. You can select how the weights of the per-class feature importance vectors are summarized into a single value:",
        "_overview.comment": "explains absolute value weights",
        "absoluteValInfo": "Average of absolute value: Shows the sum of the feature's importance across all possible classes, divided by number of classes",
        "predictedClassInfo": "Predicted class: Shows the feature importance value for a given point's predicted class",
        "_predictedClassInfo.comment": "explains predicted class weight",
        "enumeratedClassInfo": "Enumerated class names: Shows only the specified class's feature importance values across all data points.",
        "_enumeratedClassInfo.comment": "explains the weights for selecting a single class",
        "close": "Close"
    },
    "AggregateImportance": {
        "scaledFeatureValue": "Scaled Feature Value",
        "_scaledFeatureValue.comment": "The chart shows all data in a color scale (normalized to 0 - 1). This is the label for the color bar",
        "low": "Low",
        "_low.comment": "The low end of the color bar",
        "high": "High",
        "_high.comment": "label for the high end of the color bar", 
        "featureLabel": "Feature: {0}",
        "_featureLabel.comment": "Prefix to the feature name",
        "valueLabel": "Feature value: {0}",
        "_valueLabel.comment": "prefix to the feature value",
        "importanceLabel": "Importance: {0}",
        "_importanceLabel.comment": "prefix to the feature importance",
        "predictedClassTooltip": "Predicted Class: {0}",
        "_predictedClassTooltip.comment": "prefixed in front of the output class names predicted by the model",
        "trueClassTooltip": "True Class: {0}",
        "_trueClassTooltip.comment": "prefixed in front of the true class labels",
        "predictedOutputTooltip": "Predicted Output: {0}",
        "_predictedOutputTooltip.comment": "prefixed in front of the output in a regression model (numeric, no classes)",
        "trueOutputTooltip": "True Output: {0}",
        "_trueOutputTooltip.comment": "prefixed in front of the true value in a regression model (numeric, no classes)",
        "topKFeatures": "Top K Features:",
        "_topKFeatures.comment": "Label for slider to show only the top (k) most important features, where the slider is used to set the value of k",
        "topKInfo": "How is top k calculated",
        "predictedValue": "Predicted Value",
        "_predictedValue.comment": "Label for dropdown option, group data by the predicted value from the model (numeric values)",
        "predictedClass": "Predicted Class",
        "_predictedClass.comment": "Label for dropdown option, group data by predicted class from model",
        "trueValue": "True Value",
        "_trueValue.comment": "label for dropdown option, group data by true value (numeric)",
        "trueClass": "True Class",
        "_trueClass.comment": "label for dropdown, group data by true class",
        "noColor": "None",
        "_noColor.comment": "label for dropdown, do not apply any grouping",
        "tooManyRows": "The provided dataset is larger than this chart can support",
        "_tooManyRows.comment": "error message if the dataset is too large to visualize"
    },
    "BarChart": {
        "classLabel": "Class: {0}",
        "_classLabel.comment": "Prefix for class",
        "sortBy": "Sort by",
        "_sortBy.comment": "prompt for setting how values are sorted",
        "noData": "No Data",
        "_noData.comment": "Error message for no applicable data",
        "absoluteGlobal": "Absolute global",
        "_absoluteGlobal.comment": "sorting option, sort by the absolute value of the importance of all datapoints",
        "absoluteLocal": "Absolute local",
        "_absoluteLocal.comment": "sorting option, sort by the absolute value of the importance for the single selected point",
        "calculatingExplanation": "Calculating explanation",
        "_calculatingExplanation.comment": "loading message"
    },
    "IcePlot": {
        "numericError": "Must be numeric",
        "_numericError.comment": "error message if non-numeric characters typed",
        "integerError": "Must be an integer",
        "_integerError.comment": "error message if non-integer values typed by user",
        "prediction": "Prediction",
        "_prediction.comment": "Prediction label for y-axis",
        "predictedProbability": "Predicted probability",
        "_predictedProbability.comment": "predicted probability label for y-axis",
        "predictionLabel": "Prediction: {0}",
        "_predictionLabel.comment": "prediction hover prefix",
        "probabilityLabel": "Probability: {0}",
        "_probabilityLabel.comment": "probability hover prefix",
        "noModelError": "Please provide an operationalized model to explore predictions in ICE plots.",
        "_noModelError.comment": "error message for no model present",
        "featurePickerLabel": "Feature:",
        "_featurePicker.comment": "feature dropdown label",
        "minimumInputLabel": "Minimum:",
        "_minimumInputLabel.comment": "Set minimum bounds label",
        "maximumInputLabel": "Maximum:",
        "_maximumInputLabel.comment": "set maximum bounds label",
        "stepInputLabel": "Steps:",
        "_stepInputLabel.comment": "number of samples to include between minimum and maximum (integer)",
        "loadingMessage": "Loading data...",
        "_loadingMessage.comment": "loading message",
        "submitPrompt": "Submit a range to view an ICE plot",
        "_submitPrompt.comment": "prompt to user giving instructions to enter a numeric range",
        "topLevelErrorMessage": "Error in parameter",
        "_topLevelErrorMessage.comment": "error message for any parameter issue",
        "errorPrefix": "Error encountered: {0}",
        "_errorPrefix.comment": "prefix in front of external error"
    },
    "PerturbationExploration": {
        "loadingMessage": "Loading...",
        "perturbationLabel": "Perturbation:",
        "_perturbationLabel.comment": "Perturbation (ie. the user has made a set of small changes to the original data -- a perturbation. This is the label for the resulting prediction)"
    },
    "PredictionLabel": {
        "predictedValueLabel": "Predicted value : {0}",
        "_predictionValueLabel.comment": "label for prediction of numeric values",
        "predictedClassLabel": "Predicted class : {0}",
        "_predictedClassLabel.comment": "label for prediction of class value"
    },
    "Violin": {
        "groupNone": "No grouping",
        "_groupName.comment": "Do not group data option",
        "groupPredicted": "Predicted Y",
        "_groupPredicted.comment": "option to group data by predicted class",
        "groupTrue": "True Y",
        "_groupTrue.comment": "option to group data by true class",
        "groupBy": "Group by",
        "_groupBy.comment": "Group by prompt for dropdown to select how data should be grouped"
    },
    "FeatureImportanceWrapper": {
        "chartType": "Chart type:",
        "_chartType.comment": "label for dropdown to select chart format",
        "violinText": "Violin",
        "_violinText.comment": "a violin plot https://en.wikipedia.org/wiki/Violin_plot",
        "barText": "Bar",
        "_barText.comment": "a bar plot ",
        "boxText": "Box",
        "_boxText.comment": "a box plot https://en.wikipedia.org/wiki/Box_plot",
        "beehiveText": "Swarm",
        "_beehiveText.comment": "A swarm plot (its like a scatter plot with categorical x axis with dithering, see examples https://seaborn.pydata.org/generated/seaborn.swarmplot.html)",
        "globalImportanceExplanation": "Global feature importance is calculated by averaging the absolute value of the feature importance of all points (L1 normalization). ",
        "_globalImportanceExplanation.comment": "explains how global feature importance is calculated ",
        "multiclassImportanceAddendum": "All points are included in calculating a feature's importance for all classes, no differential weighting is used. So a feature that has large negative importance for many points predicted to not be of 'Class A' will greatly increase that feature's 'Class A'  importance.",
        "_multiclassImportanceAddendum.comment": "explains how global importance is calculated for each class in a multiclass case."
    }
}